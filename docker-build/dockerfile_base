#========================================================
# vnpip/cnode:stage3 : Run node on Debian stable slim
#========================================================
# FROM vnpip/cnode:stage2 AS build
# FROM cardanocommunity/cardano-node:stage2 AS build

FROM debian:latest AS build

LABEL maintainer="VNPIPS Staking Team (ada.vnpips.com)"

#ARG DEBIAN_FRONTEND=noninteractive

# Configure tzdata
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone


ENV \
    ENV=/etc/profile \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    CNODE_HOME=/opt/cardano/cnode \
    PATH=/nix/var/nix/profiles/per-user/$NONEROOTUSER/profile/bin:/nix/var/nix/profiles/per-user/$NONEROOTUSER/profile/sbin:/opt/cardano/cnode/scripts:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/home/$NONEROOTUSER/.cabal/bin \
    GIT_SSL_CAINFO=/etc/ssl/certs/ca-certificates.crt \
    NIX_SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt \
    NIX_PATH=/nix/var/nix/profiles/per-user/$NONEROOTUSER/channels

USER root
WORKDIR /

# PREREQ --no-install-recommends
RUN apt-get update && apt-get install -y \
    automake autoconf build-essential pkg-config \
    libffi-dev libgmp-dev libssl-dev libtinfo-dev \
    libsystemd-dev libncursesw5 libtool zlib1g-dev \
    make g++ tmux git jq wget curl zip rsync cron \
    libcap2-bin ncurses-bin iproute2 curl wget apt-utils xz-utils \
    netbase sudo coreutils dnsutils net-tools procps tcptraceroute bc \
    && apt-get install -y telnet telnetd netcat nano zip unzip htop nload nmap iputils-ping iptables \
#    && apt-get install -y --no-install-recommends cron \
    && sudo apt-get -y purge && sudo apt-get -y clean && sudo apt-get -y autoremove && sudo rm -rf /var/lib/apt/lists/* # && sudo rm -rf /usr/bin/apt*
    
# Install locales package
RUN  apt-get update && apt-get install --no-install-recommends -y locales

#  en_US.UTF-8 for inclusion in generation
RUN sed -i 's/^# *\(en_US.UTF-8\)/\1/' /etc/locale.gen \
    && locale-gen \
    && echo "export LC_ALL=en_US.UTF-8" >> ~/.bashrc \
    && echo "export LANG=en_US.UTF-8" >> ~/.bashrc \
    && echo "export LANGUAGE=en_US.UTF-8" >> ~/.bashrc


# SETUP NONEROOTUSER
ARG NONEROOTUSER=vnpip

RUN adduser --disabled-password --gecos '' $NONEROOTUSER \
    && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers \
    && adduser $NONEROOTUSER sudo \
    && chown -R $NONEROOTUSER:$NONEROOTUSER /home/$NONEROOTUSER/.*

# Run non-privileged command
USER $NONEROOTUSER
WORKDIR /home/$NONEROOTUSER

ENV \
    ENV=/etc/profile \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    CNODE_HOME=/opt/cardano/cnode \
    LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH" \
    PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH" \
    CARDANO_NODE_SOCKET_PATH="$CNODE_HOME/sockets/node0.socket" \
    PATH=/home/$NONEROOTUSER/.local/bin:/nix/var/nix/profiles/per-user/$NONEROOTUSER/profile/bin:/nix/var/nix/profiles/per-user/$NONEROOTUSER/profile/sbin:/opt/cardano/cnode/scripts:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/home/$NONEROOTUSER/.cabal/bin \
    GIT_SSL_CAINFO=/etc/ssl/certs/ca-certificates.crt \
    NIX_SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt \
    NIX_PATH=/nix/var/nix/profiles/per-user/$NONEROOTUSER/channels

RUN mkdir -p /home/$NONEROOTUSER/.cabal/bin

# COPY NODE BINS AND DEPS 
COPY --from=vnpip/cnode:stage2 /root/.cabal/bin/* /home/$NONEROOTUSER/.cabal/bin/
COPY --from=vnpip/cnode:stage2 /lib/x86_64-linux-gnu/lib* /lib/x86_64-linux-gnu/
COPY --from=vnpip/cnode:stage2 /lib64/ld-linux-x86-64* /lib64/
COPY --from=vnpip/cnode:stage2 /usr/lib/x86_64-linux-gnu/libgmp.* /usr/lib/x86_64-linux-gnu/
COPY --from=vnpip/cnode:stage2 /usr/lib/x86_64-linux-gnu/liblz4.* /usr/lib/x86_64-linux-gnu/
COPY --from=vnpip/cnode:stage2 /usr/lib/x86_64-linux-gnu/libsodium.* /usr/lib/x86_64-linux-gnu/
COPY --from=vnpip/cnode:stage2 /opt/ /opt/

RUN sudo chmod a+x /home/$NONEROOTUSER/.cabal/bin/* && ls /opt/ 

RUN cd /usr/bin \
&& sudo wget http://www.vdberg.org/~richard/tcpping \
&& sudo chmod 755 tcpping

# ADD SCRIPT
ADD addfile/banner.txt /home/$NONEROOTUSER/.scripts/
ADD addfile/downG.sh /home/$NONEROOTUSER/.scripts/
ADD addfile/start_all.sh /home/$NONEROOTUSER/.scripts/
ADD addfile/stop_all.sh /home/$NONEROOTUSER/.scripts/
ADD addfile/cleanCaches.sh /home/$NONEROOTUSER/.scripts/
ADD addfile/clearlogs.sh /home/$NONEROOTUSER/.scripts/
ADD addfile/memory_alert.sh /home/$NONEROOTUSER/.scripts/
ADD addfile/peerIN_check.sh /home/$NONEROOTUSER/.scripts/
ADD addfile/poolstatsUpdater.sh /home/$NONEROOTUSER/.scripts/
ADD addfile/sendmytip.sh /home/$NONEROOTUSER/.scripts/
ADD addfile/entrypoint.sh ./

RUN sudo chown -R $NONEROOTUSER:$NONEROOTUSER $CNODE_HOME/* \
    && sudo chown -R $NONEROOTUSER:$NONEROOTUSER /home/$NONEROOTUSER/.* \
    && sudo chmod a+x /home/$NONEROOTUSER/.scripts/*.sh /home/$NONEROOTUSER/entrypoint.sh

RUN cd /home/$NONEROOTUSER/.scripts/ \
&& curl -sS -o prereqs.sh https://raw.githubusercontent.com/cardano-community/guild-operators/master/scripts/cnode-helper-scripts/prereqs.sh \
&& chmod 700 prereqs.sh \ 
&& ./prereqs.sh -c -l

# UPDATE DB
#RUN cd /opt/cardano/cnode \
#    && sudo /home/$NONEROOTUSER/.scripts/downG.sh 1Jyuh8tw7A4SVEP96TpdCV_HpR9ZUdZpC db_252.zip \
#    && unzip db_252.zip \
#    && sudo rm -rf db_252.zip

# Expose NODE_PORT & EKG-prometheus monitoring ports
EXPOSE 6000 12798 
# Expose Node Exporter 
# EXPOSE 9100

ENTRYPOINT ["./entrypoint.sh"]
